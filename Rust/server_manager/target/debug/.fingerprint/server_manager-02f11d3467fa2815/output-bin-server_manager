{"message":"expected type, found keyword `mut`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":715,"byte_end":718,"line_start":33,"line_end":33,"column_start":10,"column_end":13,"is_primary":true,"text":[{"text":"    ) -> mut *DISPLAY;","highlight_start":10,"highlight_end":13}],"label":"expected type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":675,"byte_end":676,"line_start":30,"line_end":30,"column_start":17,"column_end":18,"is_primary":false,"text":[{"text":"extern \"system\" {","highlight_start":17,"highlight_end":18}],"label":"while parsing this item list starting here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":990,"byte_end":991,"line_start":45,"line_end":45,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"the item list ends here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected type, found keyword `mut`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:33:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mextern \"system\" {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mwhile parsing this item list starting here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> mut *DISPLAY;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe item list ends here\u001b[0m\n\n"}
{"message":"unused imports: `Child`, `Command`, `Error`, `SplitTerminator`, `SplitWhitespace`, `Write`, `null_mut`, `null`, `raw::c_void`, `stdin`, `stdout`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":50,"byte_end":55,"line_start":3,"line_end":3,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"    io::{stdin, stdout, BufRead, BufReader, BufWriter, Error, Result, Write},","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":57,"byte_end":63,"line_start":3,"line_end":3,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    io::{stdin, stdout, BufRead, BufReader, BufWriter, Error, Result, Write},","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":96,"byte_end":101,"line_start":3,"line_end":3,"column_start":56,"column_end":61,"is_primary":true,"text":[{"text":"    io::{stdin, stdout, BufRead, BufReader, BufWriter, Error, Result, Write},","highlight_start":56,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":111,"byte_end":116,"line_start":3,"line_end":3,"column_start":71,"column_end":76,"is_primary":true,"text":[{"text":"    io::{stdin, stdout, BufRead, BufReader, BufWriter, Error, Result, Write},","highlight_start":71,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":165,"byte_end":176,"line_start":5,"line_end":5,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"    os::{raw::c_void},","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":194,"byte_end":199,"line_start":6,"line_end":6,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"    process::{Child, Command},","highlight_start":15,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":201,"byte_end":208,"line_start":6,"line_end":6,"column_start":22,"column_end":29,"is_primary":true,"text":[{"text":"    process::{Child, Command},","highlight_start":22,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":222,"byte_end":237,"line_start":7,"line_end":7,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"    str::{SplitTerminator, SplitWhitespace},","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":239,"byte_end":254,"line_start":7,"line_end":7,"column_start":28,"column_end":43,"is_primary":true,"text":[{"text":"    str::{SplitTerminator, SplitWhitespace},","highlight_start":28,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":268,"byte_end":272,"line_start":8,"line_end":8,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"    ptr::{null, null_mut},","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":274,"byte_end":282,"line_start":8,"line_end":8,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"    ptr::{null, null_mut},","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":50,"byte_end":65,"line_start":3,"line_end":3,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"    io::{stdin, stdout, BufRead, BufReader, BufWriter, Error, Result, Write},","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":94,"byte_end":101,"line_start":3,"line_end":3,"column_start":54,"column_end":61,"is_primary":true,"text":[{"text":"    io::{stdin, stdout, BufRead, BufReader, BufWriter, Error, Result, Write},","highlight_start":54,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":109,"byte_end":116,"line_start":3,"line_end":3,"column_start":69,"column_end":76,"is_primary":true,"text":[{"text":"    io::{stdin, stdout, BufRead, BufReader, BufWriter, Error, Result, Write},","highlight_start":69,"highlight_end":76}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":153,"byte_end":283,"line_start":4,"line_end":8,"column_start":34,"column_end":26,"is_primary":true,"text":[{"text":"    net::{TcpListener, TcpStream},","highlight_start":34,"highlight_end":35},{"text":"    os::{raw::c_void},","highlight_start":1,"highlight_end":23},{"text":"    process::{Child, Command},","highlight_start":1,"highlight_end":31},{"text":"    str::{SplitTerminator, SplitWhitespace},","highlight_start":1,"highlight_end":45},{"text":"    ptr::{null, null_mut},","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Child`, `Command`, `Error`, `SplitTerminator`, `SplitWhitespace`, `Write`, `null_mut`, `null`, `raw::c_void`, `stdin`, `stdout`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:3:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    io::{stdin, stdout, BufRead, BufReader, BufWriter, Error, Result, Write},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    net::{TcpListener, TcpStream},\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    os::{raw::c_void},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    process::{Child, Command},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    str::{SplitTerminator, SplitWhitespace},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ptr::{null, null_mut},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":3893,"byte_end":3958,"line_start":118,"line_end":121,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    match CURRENT_OS {","highlight_start":5,"highlight_end":23},{"text":"        \"linux\" => {}","highlight_start":1,"highlight_end":22},{"text":"        _ => {}","highlight_start":1,"highlight_end":16},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1777,"byte_end":3885,"line_start":72,"line_end":116,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    loop {","highlight_start":5,"highlight_end":11},{"text":"        let stream: TcpStream = match listener.accept() {","highlight_start":1,"highlight_end":58},{"text":"            Ok((stream, addr)) => {","highlight_start":1,"highlight_end":36},{"text":"                println!(\"new client: {addr:?}\");","highlight_start":1,"highlight_end":50},{"text":"                stream","highlight_start":1,"highlight_end":23},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            Err(e) => {","highlight_start":1,"highlight_end":24},{"text":"                println!(\"Error: {}\", e);","highlight_start":1,"highlight_end":42},{"text":"                return;","highlight_start":1,"highlight_end":24},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        };","highlight_start":1,"highlight_end":11},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // let mut stream_writer: BufWriter<TcpStream> = BufWriter::new(stream.try_clone().unwrap());","highlight_start":1,"highlight_end":102},{"text":"        // let mut stream_reader: BufReader<TcpStream> = BufReader::new(stream.try_clone().unwrap());","highlight_start":1,"highlight_end":102},{"text":"        let mut buffered_stream: BufferedTcpStream =","highlight_start":1,"highlight_end":53},{"text":"            BufferedTcpStream::new(stream) // .try_clone().unwrap()","highlight_start":1,"highlight_end":68},{"text":"                .expect(\"Failed to create buffered stream from networkstream!\");","highlight_start":1,"highlight_end":81},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        loop {","highlight_start":1,"highlight_end":15},{"text":"            let mut package: Vec<u8> = Vec::new();","highlight_start":1,"highlight_end":51},{"text":"            println!(\"Waiting for client to send data...\");","highlight_start":1,"highlight_end":60},{"text":"            let bytes_read: usize =","highlight_start":1,"highlight_end":36},{"text":"                match buffered_stream.reader.read_until('\\n' as u8, &mut package) {","highlight_start":1,"highlight_end":84},{"text":"                    Ok(bytes_read) => bytes_read,","highlight_start":1,"highlight_end":50},{"text":"                    Err(e) => {","highlight_start":1,"highlight_end":32},{"text":"                        println!(\"Error: {}\", e);","highlight_start":1,"highlight_end":50},{"text":"                        break;","highlight_start":1,"highlight_end":31},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                };","highlight_start":1,"highlight_end":19},{"text":"            println!(\"read: {} bytes to buffer\", bytes_read);","highlight_start":1,"highlight_end":62},{"text":"            let message: String =","highlight_start":1,"highlight_end":34},{"text":"                String::from_utf8(package.to_vec()).expect(\"Could not convert package to string\");","highlight_start":1,"highlight_end":99},{"text":"            print!(\"Received message: {}\", message);","highlight_start":1,"highlight_end":53},{"text":"            let data = message.split_terminator(\",\");","highlight_start":1,"highlight_end":54},{"text":"            //println!(\"{}\", data.collect());","highlight_start":1,"highlight_end":46},{"text":"            // let mut mouse_x;","highlight_start":1,"highlight_end":32},{"text":"            // let mut mouse_y;","highlight_start":1,"highlight_end":32},{"text":"            // (mouse_x, mouse_y) = data.next().unwrap().parse::<i32>().unwrap();","highlight_start":1,"highlight_end":82},{"text":"            // let bytes_written: usize = buf_stream.writer.write(message.as_bytes()).unwrap();","highlight_start":1,"highlight_end":96},{"text":"            // // let bytes_written: usize = stream.write(message.as_bytes()).unwrap();","highlight_start":1,"highlight_end":88},{"text":"            // println!(\"Returned: {bytes_written} bytes to client\");","highlight_start":1,"highlight_end":70},{"text":"            // buf_stream.writer.flush().unwrap();","highlight_start":1,"highlight_end":51},{"text":"            // // let write = BufWriter::write_all(&mut bufStream.output, &mut package);","highlight_start":1,"highlight_end":89},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:118:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    loop {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let stream: TcpStream = match listener.accept() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Ok((stream, addr)) => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                println!(\"new client: {addr:?}\");\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12many code following this expression is unreachable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match CURRENT_OS {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"linux\" => {}\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => {}\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable expression\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\n"}
{"message":"aborting due to previous error; 2 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error; 2 warnings emitted\u001b[0m\n\n"}
